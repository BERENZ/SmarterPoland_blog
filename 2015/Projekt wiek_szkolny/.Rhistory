1,
col=kolory[as.character(miesiac$gatunki[j])],
facing = "clockwise", adj=c(0,0),
cex=1)
}
circos.trackText(factors = k,
0.5,
1,
month.abb[k],
1,
facing = "clockwise", adj=c(1,1),
cex=1.8)
}
circos.clear()
dev.off()
library(devtools)
?install_github
install_url("https://github.com/mi2-warsaw/RTCGA.data/blob/master/RTCGA.cnv_0.1.tar.gz?raw=true")
install_url("https://github.com/mi2-warsaw/RTCGA.data/blob/master/RTCGA.cnv_0.1.tar.gz")
install_url("https://github.com/mi2-warsaw/RTCGA.data/raw/master/RTCGA.cnv_0.1.tar.gz")
archivist::aread("pbiecek/graphGallery/2166d")
archivist::aread("pbiecek/graphGallery/2166d")
library(archivist)
archivist::aread("pbiecek/graphGallery/2166d")
ahistory(md5hash = "050e41ec3bc40b3004bc6bdd356acae7")
setGithubRepo("pbiecek", "graphGallery")
ahistory(md5hash = "050e41ec3bc40b3004bc6bdd356acae7")
traceback()
iris %a%
filter(Sepal.Length < 6) %a%
lm(Petal.Length~Species, data=.) %a%
summary() -> tmp
library(dplyr)
iris %a%
filter(Sepal.Length < 6) %a%
lm(Petal.Length~Species, data=.) %a%
summary() -> tmp
setLocalRepo("new_repo")
iris %a%
filter(Sepal.Length < 6) %a%
lm(Petal.Length~Species, data=.) %a%
summary() -> tmp
createEmptyRepo("new_repo")
iris %a%
filter(Sepal.Length < 6) %a%
lm(Petal.Length~Species, data=.) %a%
summary() -> tmp
ahistory(tmp)
loadFromGithubRepo("92ada1", repo="graphGallery", user="pbiecek",
value=TRUE)
obj2rm <- searchInLocalRepo(tag = list("2010-01-01", "2015-01-01"),
repoDir = repo)
searchInLocalRepo
?searchInLocalRepo
obj2rm <- searchInLocalRepo(list("2010-01-01", "2015-01-01"),
repoDir = repo)
repo
repo = "new_repo/"
obj2rm <- searchInLocalRepo(list("2010-01-01", "2015-01-01"),
repoDir = repo)
obj2rm
obj2rm <- searchInLocalRepo(list("2010-01-01", "2016-01-01"),
repoDir = repo)
obj2rm
Sys.Date()-1
Sys.Date()
Sys.Date()-30
searchInLocalRepo(list(dateFrom = "2010-01-01", dateTo = Sys.Date()-30),
repoDir = repo)
citation("digest")
citation("knitr")
citation("Sweave")
library(Sweave)
citation("shiny")
citation("gridExtra")
citation("dplyr")
citation("magrittr")
citation("ggplot2")
shiny::runApp('GitHub/BetaBit_opowiadania/_Gra_rozklady_')
y <- rnorm(100)
g <- factor(floor(runif(100,3)))
df <- data.frame(y, g)
df
?runif
g <- factor(floor(runif(100,0,3)))
df <- data.frame(y, g)
df
ggplot(df, aes(y, colour = g)) +
stat_ecdf()
shiny::runApp('GitHub/BetaBit_opowiadania/_Gra_rozklady_')
shiny::runApp('GitHub/BetaBit_opowiadania/_Gra_rozklady_')
pl <- ggplot(df, aes(y, colour = g)) + stat_boxplot()
pl
pl <- ggplot(df, aes(y=y, x=g, colour = g)) + stat_boxplot()
pl
pl <- ggplot(df, aes(y=y, x=g, colour = g)) + stat_boxplot() + coord_flip()
pl
pl + geom_linerange(x=1, ymin=0, ymax=1)
pl <- ggplot(df, aes(y=y, x=g, colour = g)) + stat_boxplot() + coord_flip()
pl + geom_linerange(x=1, ymin=0, ymax=1)
pl + geom_vline(x=1)
pl + geom_hline(x=1)
pl + geom_hline(intercept=1)
pl + geom_hline(xintercept=1)
pl + geom_hline(yintercept=1)
pl <- ggplot(df, aes(y, colour = g)) + stat_density()
pl
pl <- ggplot(df, aes(y, fill = g)) + stat_density()
pl
pl <- ggplot(df, aes(y, fill = g)) + stat_density(alpha=0.5)
pl
pl <- ggplot(df, aes(y, fill = g)) + stat_density(alpha=0.8)
pl
pl + geom_vline(xintercept=position$x)
pl + geom_vline(xintercept=1)
shiny::runApp('GitHub/BetaBit_opowiadania/_Gra_rozklady_')
shiny::runApp('GitHub/BetaBit_opowiadania/_Gra_rozklady_')
pl <- ggplot(df, aes(y, fill = g)) + geom_histogram(alpha=0.8)
pl
pl <- ggplot(df, aes(y, fill = g)) + geom_histogram(alpha=0.8, binwidth=1)
pl
library(dplyr)
head(df)
df %>%
group_by(g) %>%
summarise(ecdf(y)(1))
position = list(x=1)
df %>%
group_by(g) %>%
summarise(ecdf = ecdf(y)(position$x))
df %>%
group_by(g) %>%
summarise(ecdf = ecdf(y)(position$x)) %>%
mutate(y = position$x)
pl <- ggplot(df, aes(y, colour = g)) + stat_ecdf()
df2 <- df %>%
group_by(g) %>%
summarise(ecdf = ecdf(y)(position$x)) %>%
mutate(y = position$x)
pl <- pl + geom_vline(xintercept=position$x) +
geom_point(data=df2, aes(x=y, y=ecdf, color=g), size=3)
pl
pl <- pl + geom_vline(xintercept=position$x) +
geom_point(data=df2, aes(x=y, y=ecdf, color=g), size=5)
pl
pl <- pl + geom_vline(xintercept=position$x) +
geom_point(data=df2, aes(x=y, y=ecdf, color=g), size=5) +
geom_text(data=df2, aes(x=y, y=ecdf, color=g, label=g))
pl
pl <- ggplot(df, aes(y, colour = g)) + stat_ecdf()
pl + geom_vline(xintercept=position$x) +
geom_point(data=df2, aes(x=y, y=ecdf, color=g), size=5) +
geom_text(data=df2, aes(x=y, y=ecdf, color=g, label=g))
pl + geom_text(data=df2, aes(x=y, y=ecdf, color=g, label=g))
pl <- pl + geom_vline(xintercept=position$x) +
geom_point(data=df2, aes(x=y, y=ecdf, color=g), size=5) +
geom_text(data=df2, aes(x=y, y=ecdf, color=g, label=g), hjust=0, vjust=0)
pl
pl <- pl + geom_vline(xintercept=position$x) +
geom_point(data=df2, aes(x=y, y=ecdf, color=g), size=5) +
geom_text(data=df2, aes(x=y, y=ecdf,  label=g), hjust=0, vjust=0)
pl
pl <- pl + geom_vline(xintercept=position$x) +
geom_point(data=df2, aes(x=y, y=ecdf, color=g), size=5) +
geom_text(data=df2, aes(x=y, y=ecdf,label=g), color="black",hjust=0, vjust=0)
pl + theme_bw()
pl <- ggplot(df, aes(y, colour = g)) + stat_ecdf()
df2 <- df %>%
group_by(g) %>%
summarise(ecdf = ecdf(y)(position$x)) %>%
mutate(y = position$x)
pl <- pl + geom_vline(xintercept=position$x) +
geom_point(data=df2, aes(x=y, y=ecdf, color=g), size=5) +
geom_text(data=df2, aes(x=y, y=ecdf,label=paste("grupa", g)), color="black",hjust=0, vjust=0)
pl + theme_bw()
pl <- ggplot(df, aes(y, colour = g)) + stat_ecdf()
df2 <- df %>%
group_by(g) %>%
summarise(ecdf = ecdf(y)(position$x)) %>%
mutate(y = position$x)
pl <- pl + geom_vline(xintercept=position$x) +
geom_point(data=df2, aes(x=y, y=ecdf, color=g), size=5) +
geom_text(data=df2, aes(x=y, y=ecdf,label=paste0("grupa ", g, ": ", signif(100*ecdf,2))), color="black",hjust=0, vjust=0)
pl + theme_bw()
shiny::runApp('GitHub/BetaBit_opowiadania/_Gra_rozklady_')
shiny::runApp('GitHub/BetaBit_opowiadania/_Gra_rozklady_')
pl <- ggplot(df, aes(y, colour = g)) + stat_ecdf()
df2 <- df %>%
group_by(g) %>%
summarise(ecdf2 = ecdf(y)(position$x)) %>%
mutate(y = position$x)
pl <- pl + geom_vline(xintercept=position$x) +
geom_point(data=df2, aes(x=y, y=ecdf2, color=g), size=5) +
geom_text(data=df2, aes(x=y, y=ecdf2,label=paste0("grupa ", g, ": ", signif(100*ecdf2,2), "%")), color="black",hjust=0, vjust=0)
}
pl + theme_bw()
shiny::runApp('GitHub/BetaBit_opowiadania/_Gra_rozklady_')
shiny::runApp('GitHub/BetaBit_opowiadania/_Gra_rozklady_')
shiny::runApp('GitHub/BetaBit_opowiadania/_Gra_rozklady_')
shiny::runApp('GitHub/BetaBit_opowiadania/_Gra_rozklady_')
shiny::runApp('GitHub/BetaBit_opowiadania/_Gra_rozklady_')
shiny::runApp('GitHub/BetaBit_opowiadania/_Gra_rozklady_')
shiny::runApp('GitHub/BetaBit_opowiadania/_Gra_rozklady_')
shiny::runApp('GitHub/BetaBit_opowiadania/_Gra_rozklady_')
shiny::runApp('GitHub/BetaBit_opowiadania/_Gra_rozklady_')
g <- factor(rep(c(1:3),200))
shiny::runApp('GitHub/BetaBit_opowiadania/_Gra_rozklady_')
g <- factor(rep(c(1:3),200))
head(g)
shiny::runApp('GitHub/BetaBit_opowiadania/_Gra_rozklady_')
pl <- ggplot(df, aes(y, fill = g)) + geom_histogram(alpha=0.8, binwidth=1)
pl
pl <- ggplot(df, aes(y, fill = g)) + geom_histogram(alpha=0.8, binwidth=1, position = "dodge")
pl
pl <- ggplot(df, aes(y, fill = g)) + geom_density(alpha=0.8, binwidth=1)
pl
pl <- ggplot(df, aes(y, fill = g)) + geom_density(alpha=0.8, binwidth=.2)
pl
pl <- ggplot(df, aes(y, fill = g)) + geom_density(alpha=0.8, span=.2)
pl
pl <- ggplot(df, aes(y, fill = g)) + geom_density(alpha=0.8, smoth=.2)
pl
pl <- ggplot(df, aes(y, fill = g)) + geom_density(alpha=0.8, adjust=.2)
pl
pl <- ggplot(df, aes(y, fill = g)) + geom_density(alpha=0.8, adjust=.5)
pl
pl <- ggplot(df, aes(y)) + geom_histogram(alpha=0.8, binwidth=1, position = "dodge")
pl
pl <- ggplot(df, aes(y)) + geom_histogram(alpha=0.8, binwidth=.5, position = "dodge")
pl
stat_bin(20)
stat_bin(data=df, aes(y))
stat_bin(data=df, aes(y))(2)
head(df)
df %>%
mutate(y2 = cut(y, seq(-5,5,0.5)))
df %>%
mutate(y2 = cut(y, seq(-5,5,0.5))) %>%
group_by(y2) %>%
summarise(pdf2 = n())
df2 <- df %>%
mutate(y2 = cut(y, seq(-5,5,0.5))) %>%
group_by(y2) %>%
summarise(pdf2 = n())
pl <- ggplot(df2, aes(x=y2, y=pdf2)) + geom_bar(stat="identity")
pl
?theme_bw
?theme
pl + theme_bw(axis.text.x=theme_text(angle=-90))
pl + theme(axis.text.x=theme_text(angle=-90))
pl + theme(axis.text.x=element_text(angle=-90))
pl <- pl + geom_vline(xintercept=position$x)
shiny::runApp('GitHub/BetaBit_opowiadania/_Gra_rozklady_')
shiny::runApp('GitHub/BetaBit_opowiadania/_Gra_rozklady_')
shiny::runApp('GitHub/BetaBit_opowiadania/_Gra_rozklady_')
shiny::runApp('GitHub/BetaBit_opowiadania/_Gra_rozklady_')
df2
shiny::runApp('GitHub/BetaBit_opowiadania/_Gra_rozklady_')
shiny::runApp('GitHub/BetaBit_opowiadania/_Gra_rozklady_')
shiny::runApp('GitHub/BetaBit_opowiadania/_Gra_rozklady_')
shiny::runApp('GitHub/BetaBit_opowiadania/_Gra_rozklady_')
shiny::runApp('GitHub/BetaBit_opowiadania/_Gra_rozklady_')
>tabPanel
?tabPanel
shiny::runApp('GitHub/BetaBit_opowiadania/_Gra_rozklady_')
shiny::runApp('GitHub/BetaBit_opowiadania/_Gra_rozklady_')
setwd("GitHub/archivist/")
library(devtools)
build()
check()
document()
check()
build()
setwd("../..")
!require(archivist)
archivist::aread("pbiecek/graphGallery/2166dfbd3a7a68a91a2f8e6df1a44111")
models <- asearch("pbiecek/graphGallery", patterns = c("class:lm", "coefname:Sepal.Length"))
lapply(models, coef)
plots <- asearch("pbiecek/graphGallery",
patterns = c("class:gg",
"labelx:Sepal.Length"))
library("gridExtra")
do.call(grid.arrange,  plots)
createEmptyRepo("tmp_archivist", default = TRUE)
iris %a%
filter(Sepal.Length < 6) %a%
lm(Petal.Length~Species, data=.) %a%
summary() -> tmp
repo <- "new_repo"
createEmptyRepo(repoDir = repo)
copyGithubRepo( repoTo = repo, md5hashes= "2166dfbd3a7a68a91a2f8e6df1a44111",
user="pbiecek", repo="graphGallery" )
?curlPerform
?CURLOptions
??CURLOptions
??pam
??pem
curlSetOpt(cainfo = "/Users/pbiecek/cacert.pem")
library(RCurl)
curlSetOpt(cainfo = "/Users/pbiecek/cacert.pem")
curl = getCurlHandle()
curl
library(rvest)
strona <- html("http://www.sejm.gov.pl/Sejm7.nsf/posel.xsp?id=001&type=A")
html_nodes(strona, "#biura")
html_nodes(strona, "#biura") -> wezly
html_attr(wwezly)
html_attr(wezly)
html_attr(wezly, "href")
library(testowy)
?Yourclass
x <- rnorm(5)
y <- rnorm(5) + 1
t.test(x, y)$p.value
wilcox.test(x, y)$p.value
pp <- replicate(1000, {
x <- rnorm(5)
y <- rnorm(5) + 1
c(t.test(x, y)$p.value,
wilcox.test(x, y)$p.value)
)
x <- rnorm(5)
y <- rnorm(5) + 1
c(t.test(x, y)$p.value,
wilcox.test(x, y)$p.value)
pp <- replicate(1000, {
x <- rnorm(5)
y <- rnorm(5) + 1
c(t.test(x, y)$p.value,
wilcox.test(x, y)$p.value)
})
dim(pp)
dim(t(pp) < 0.05)
colMeans(t(pp) < 0.05)
pp <- replicate(1000, {
x <- rnorm(5)
y <- rnorm(5) + 1.5
c(t.test(x, y)$p.value,
wilcox.test(x, y)$p.value)
})
colMeans(t(pp) < 0.05)
pp <- replicate(5000, {
x <- rnorm(5)
y <- rnorm(5) + 1.5
c(t.test(x, y)$p.value,
wilcox.test(x, y)$p.value)
})
colMeans(t(pp) < 0.05)
pp <- replicate(5000, {
x <- rnorm(5, 0, 1)
y <- rnorm(5, 1,5, 4)
c(t.test(x, y)$p.value,
wilcox.test(x, y)$p.value)
})
colMeans(t(pp) < 0.05)
pp <- replicate(5000, {
x <- rnorm(5, 0, 1)
y <- rnorm(5, 1.5, 4)
c(t.test(x, y)$p.value,
wilcox.test(x, y)$p.value)
})
colMeans(t(pp) < 0.05)
pp <- replicate(5000, {
x <- rnorm(50, 0, 1)
y <- rnorm(50, 1, 4)
c(t.test(x, y)$p.value,
wilcox.test(x, y)$p.value)
})
colMeans(t(pp) < 0.05)
pp <- replicate(5000, {
x <- rnorm(50, 0, 1)
y <- rnorm(50, 1, 9)
c(t.test(x, y)$p.value,
wilcox.test(x, y)$p.value)
})
colMeans(t(pp) < 0.05)
pp <- replicate(5000, {
x <- rnorm(50, 0, 1)
y <- rnorm(50, 3, 9)
c(t.test(x, y)$p.value,
wilcox.test(x, y)$p.value)
})
colMeans(t(pp) < 0.05)
pp <- replicate(5000, {
x <- rnorm(50, 0, 1)
y <- rnorm(50, 4, 9)
c(t.test(x, y)$p.value,
wilcox.test(x, y)$p.value)
})
colMeans(t(pp) < 0.05)
shiny::runApp('GitHub/BetaBit_opowiadania/_Gra_rozklady_')
shiny::runApp('GitHub/BetaBit_opowiadania/_Gra_rozklady_')
shiny::runApp('GitHub/BetaBit_opowiadania/_Gra_rozklady_')
library(RPostgreSQL)
?dbConnect()
?dbConnect
??RPostgreSQL
drv <- dbDriver("PostgreSQL")
dbConnect(drv, user="SejmRP", password="x56jK99ZwQp")
mpolaczenie = dbConnect(sterownik,
user='pbiecek', password=haslo, dbname='students',
host='services.mini.pw.edu.pl')
polaczenie = dbConnect(drv,
user='pbiecek', password=haslo, dbname='students',
host='services.mini.pw.edu.pl')
polaczenie = dbConnect(drv,
user='SejmRP', password='x56jK99ZwQp', dbname='SejmRP',
host='services.mini.pw.edu.pl')
polaczenie = dbConnect(drv,
user='SejmRP', password='x56jK99ZwQp', dbname='SejmRP',
host='services.mini.pw.edu.pl')
polaczenie = dbConnect(drv,
user='sejmrp', password='x56jK99ZwQp', dbname='sejmrp',
host='services.mini.pw.edu.pl')
polaczenie = dbConnect(drv,
user='postgres', password='x56jK99ZwQp', dbname='sejmrp',
host='services.mini.pw.edu.pl')
polaczenie = dbConnect(drv,
user='sejmrp', password='x56jK99ZwQp', dbname='sejmrp',
host='services.mini.pw.edu.pl')
library(RTCGA.PANCAN12)
expression <- rbind(expression.cb1, expression.cb2)
expression[1:5,1:5]
expression[1:15,1:5]
fisher.test(matrix(c(12,3,22, 42),2,2))
prop.test(33,33+42)
3069*0.3
library(openxlsx)
library(archivist)
setLocalRepo("/Users/pbiecek/GitHub/graphGallery/")
setwd("~/Dropbox/Projekt wiek_szkolny")
liczby <- read.xlsx("seprm.xlsx", 1)
etykiety <- read.xlsx("seprm.xlsx", 2)
table(z = liczby$"1970", do = liczby$"1980")
table(z = liczby$"1970", do = liczby$"2010")
flow <- rbind(
data.frame(table(z = paste0(liczby$"1974", "-lat w ", "1974"),
do = paste0(liczby$"1984", "-lat w ", "1984"))),
data.frame(table(z = paste0(liczby$"1984", "-lat w ", "1984"),
do = paste0(liczby$"1994", "-lat w ", "1994"))),
data.frame(table(z = paste0(liczby$"1994", "-lat w ", "1994"),
do = paste0(liczby$"2004", "-lat w ", "2004"))),
data.frame(table(z = paste0(liczby$"2004", "-lat w ", "2004"),
do = paste0(liczby$"2014", "-lat w ", "2014"))))
flow <- flow[flow[,3] > 0,]
nodes <- data.frame(name=unique(c(levels(flow[,1]), levels(flow[,2]))))
nam <- seq_along(nodes[,1])-1
names(nam) <- nodes[,1]
links <- data.frame(source = nam[as.character(flow[,1])],
target = nam[as.character(flow[,2])],
value = flow[,3])
sankeyNetwork(Links = links, Nodes = nodes,
Source = "source", Target = "target",
Value = "value", NodeID = "name",
width = 700, fontSize = 12, nodeWidth = 30)
library(dplyr)
library(networkD3)
library(dplyr)
a1 <- links %>%
group_by(source) %>%
summarise(sum = sum(value))
a2 <- links %>%
group_by(target) %>%
summarise(sum = sum(value))
colnames(a1) = c("link", "sum")
colnames(a2) = c("link", "sum")
aa <- rbind(a1[1:4,], a2)
bb <- as.data.frame(aa)[,2]
nodes2 <- nodes
nodes2$name <- paste0(nodes2$name, "r, (", bb, " ",
ifelse(bb==1, "kraj",
ifelse(bb %% 10 < 5, "kraje",
"krajów")),")")
sankeyNetwork(Links = links, Nodes = nodes2,
Source = "source", Target = "target",
Value = "value", NodeID = "name",
width = 1000, fontSize = 12, nodeWidth = 30)
nodes2$name
nodes2 <- nodes
nodes2$name <- paste0(substr(nodes2$name, 1, 6), "(", bb, " ",
ifelse(bb==1, "kraj",
ifelse(bb %% 10 < 5, "kraje",
"krajów")), substr(nodes2$name, 7, 100),"r.)")
sankeyNetwork(Links = links, Nodes = nodes2,
Source = "source", Target = "target",
Value = "value", NodeID = "name",
width = 1000, fontSize = 12, nodeWidth = 30)
nodes2 <- nodes
nodes2$name <- paste0(substr(nodes2$name, 1, 6), "(", bb, " ",
ifelse(bb==1, "kraj",
ifelse(bb %% 10 %in% 1:5, "kraje",
"krajów")), substr(nodes2$name, 6, 100),"r.)")
sankeyNetwork(Links = links, Nodes = nodes2,
Source = "source", Target = "target",
Value = "value", NodeID = "name",
width = 1000, fontSize = 12, nodeWidth = 30)
liczby[1:4,1:5]
liczby$Country.Name[liczby$"1974" < liczby$"2014"]
liczby$Country.Name[liczby$"1974" > liczby$"2014"]
cat(liczby$Country.Name[liczby$"1974" > liczby$"2014"])
cat(liczby$Country.Name[liczby$"1974" > liczby$"2014"], sep=", ")
cat(liczby$Country.Name[liczby$"1974" < liczby$"2014"], sep=", ")
liczby$Country.Name[liczby$"1974" < liczby$"2014"]
liczby$Country.Name[liczby$"1974" < liczby$"2014" & liczby$"2014" == 6]
liczby$Country.Name[liczby$"1974" > liczby$"2014" & liczby$"2014" == 6]
liczby[liczby$"1974" > liczby$"2014", c("Country.Name", "1974","2014")]
sim(liczby[liczby$"1974" > liczby$"2014", c("Country.Name", "1974","2014")])
dim(liczby[liczby$"1974" > liczby$"2014", c("Country.Name", "1974","2014")])
dim(liczby[liczby$"1974" ==6, c("Country.Name", "1974","2014")])
dim(liczby[liczby$"1974" ==7, c("Country.Name", "1974","2014")])
dim(liczby[liczby$"2014" ==7, c("Country.Name", "1974","2014")])
table(liczby$"2014", liczby$"1974")
