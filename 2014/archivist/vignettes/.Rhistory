install.packages("ROCR")
library(devtools)
require(archivist)
install_github("archivist", "pbiecek")
library(tools)
lazyLoad = local({load("Huge.RData");
environment()})
tools:::makeLazyLoadDB(lazyLoad, "Huge")
lazyLoad("Huge")
objNames <- ls() #232 objects
DIRectory <- getwd()
createEmptyRepo( DIRectory )
library(cluster)
lapply( as.list(objNames), function(x){
y <- get( x, envir = lazyLoad )
attr(y, "tags") <- paste0("realName: ", x)
saveToRepo( y, repoDir = DIRectory )} )
hashes1 <- searchInLocalRepo( "class:data.frame", DIRectory)
hashes2 <- searchInLocalRepo( "realName: ir", DIRectory,
fixed = FALSE)
(hash <- intersect(hashes1, hashes2))
myData <- loadFromLocalRepo( hash, DIRectory, value = TRUE )
summary(myData[,-5])
getTagsLocal(hash, DIRectory, "realName")
hashes <- unlist(sapply(c("class:coxph", "class:function",
"class:data.frame"), searchInLocalRepo,
repoDir = DIRectory))
hashesR <- searchInLocalRepo( "relation",
repoDir = DIRectory, fixed = FALSE)
DIRectory2 <- (paste0( DIRectory, "/ex"))
createEmptyRepo( DIRectory2, force = TRUE )
copyLocalRepo( DIRectory, DIRectory2,
c( hashes, hashesR ) )
tarLocalRepo( DIRectory2 )
summaryLocalRepo( DIRectory2 )
deleteRepo( DIRectory )
deleteRepo( DIRectory2 )
file.remove("Huge.rdb")
file.remove("Huge.rdx")
file.remove("ex")
?markdownHTMLOptions
markdownHTMLOptions
library(knitr)
markdownHTMLOptions
markdownToHTML
library(markdown)
?markdownToHTML
markdownHTMLOptions
?markdownHTMLOptions
markdownHTMLOptions()
options(markdown.HTML.options = setdiff(markdownHTMLOptions(), "base64_images")
)
markdownHTMLOptions()
setdiff(markdownHTMLOptions(), "base64_images")
