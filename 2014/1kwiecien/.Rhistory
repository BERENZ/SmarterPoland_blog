setwd("c:/_Przemek_/Dysk Google/__SmarterPoland__/_NoweTematy_/                       polowanie na wykresy")
dane <- scan()
2006 2984 33 45 -12 -13
dane <- scan()
dim(dane) = c(6,10)
dim(dane) = c(6,10)
dane <- t(dane)
colnames(dane) = c("rok", "l.mieszkancow","urodzen","zgonow","bilans.demograficzny","bilans.migracji")
barplot(dane[,3], las=1)
plot(1, xlim=c(1996.5,2006.5),ylim=c(-55,55),las=1,xlab="rok",ylab="bilans osobowy",bty="n")
legend("topright",c("Urodzen","Zgonow","Migracje"),fill=c("pink3","gold3","blue3"), bty="n", ncol=3,cex=1.2)
rect(dane[,1]-0.3, 0, dane[,1], dane[,3], col="pink3", border="pink3")
rect(dane[,1]+0.05, dane[,3], dane[,1]+0.35, dane[,3]-dane[,4], col="gold3", border="gold3")
rect(dane[,1]+0.05, dane[,3]-dane[,4], dane[,1]+0.35, dane[,3]-dane[,4]+dane[,6], col="blue3", border="blue3")
abline(h=seq(-60,60,10),lty="28",col="#77777733",lwd=1)
abline(h=0,lwd=1)
axis(1,1997:2006)
axis(2,seq(-50,50,10),las=1)
plot(1, xlim=c(1996.5,2006.5),ylim=c(-55,55),las=1,xlab="rok",ylab="bilans osobowy",bty="n")
legend("topright",c("Urodzen","Zgonow","Migracje"),fill=c("pink3","gold3","blue3"), bty="n", ncol=3,cex=1.2)
rect(dane[,1]-0.3, 0, dane[,1], dane[,3], col="pink3", border="pink3")
rect(dane[,1]+0.05, dane[,3], dane[,1]+0.35, dane[,3]-dane[,4], col="gold3", border="gold3")
rect(dane[,1]+0.05, dane[,3]-dane[,4], dane[,1]+0.35, dane[,3]-dane[,4]+dane[,6], col="blue3", border="blue3")
abline(h=seq(-60,60,10),lty="28",col="#77777733",lwd=1)
abline(h=0,lwd=1)
axis(1,1997:2006)
axis(2,seq(-50,50,10),las=1)
library(PISA2003lite)
library(PISA2006lite)
students <- student2006
plot(1, xlim=c(1996.5,2006.5),ylim=c(-55,55),las=1,xlab="rok",ylab="bilans osobowy",bty="n")
legend("topright",c("Urodzen","Zgonow","Migracje"),fill=c("pink3","gold3","blue3"), bty="n", ncol=3,cex=1.2)
rect(dane[,1]-0.3, 0, dane[,1], dane[,3], col="pink3", border="pink3")
rect(dane[,1]+0.05, dane[,3], dane[,1]+0.35, dane[,3]-dane[,4], col="gold3", border="gold3")
rect(dane[,1]+0.05, dane[,3]-dane[,4], dane[,1]+0.35, dane[,3]-dane[,4]+dane[,6], col="blue3", border="blue3")
abline(h=seq(-60,60,10),lty="28",col="#77777733",lwd=1)
abline(h=0,lwd=1)
axis(1,1997:2006)
axis(2,seq(-50,50,10),las=1)
legend("topright",c("Urodzen","Zgonow","Migracje"),fill=c("pink3","gold3","blue3"), bty="n", ncol=3,cex=1.2)
library(knitr)
boxplot(Petal.Length~Species, data = iris)
library(psych))
library(psych)
?geometric.mean
?harmonic.mean
library(vioplot)
install.package("vioplot")
install.packages("vioplot")
library(vioplot)
vioplot
?vioplot
example(vioplot)
?car
library(car)
?sp
library(car)
sp(cisnienie.skurczowe, cisnienie.rozkurczowe, groups=plec, smooth=F,
lwd=3, pch=c(20,21), cex=1.5)
daneSoc=read.csv("http://www.biecek.pl/R/dane/daneSoc.csv",sep=";")
attach(daneSoc)
library(car)
sp(cisnienie.skurczowe, cisnienie.rozkurczowe, groups=plec, smooth=F,
lwd=3, pch=c(20,21), cex=1.5)
install.packages("YaleToolkit")
YaleToolkit::gpairs
library(YaleToolkit)
gpairs
library(gplots)
install.packages("gplots")
library(gplots)
baloonplot
library("gplots")
baloonplot
balloonplot
install.packages("MCMCpack")
install.packages("VGAM")
library("VGAM")
library("MCMCpack")
prayleigh
pweibull
2 < 3 + 1
2 < (3 + 1)
library(mapdata)
install.packages("mapdata")
library(maps)
?map
map()
map()
?map
install.packages("mapdata")
install.packages("mapdata")
install.packages("mapdata")
worldMapEnv
data(worldMapEnv)
worldMapEnv
library(mapdata)
?mapdata
mapdata:::.onLoad
map()
map()
?map
map('world','poland')
map('world','europe')
?map
worldMapEnv
ls()
map('world', fill = TRUE, col = 1:10)
map('world', fill = TRUE, col = 1:12)
map('world', c('poland','germany'))
map('world', c('poland','germany','korea'))
map('world', c('poland','germany','japan'))
map('world', c('poland','germany','japan','south korea'))
map('world', c('poland','germany','japan','south korea','usa'))
map('world', c('poland','germany','japan','south korea','usa'), col=1:3)
map('world', c('poland','germany','japan','south korea','usa'), col=1:3,fill=T)
map('worldHiresMapEnv')
map('worldHires')
map('worldHires','poland')
map('world','poland')
map('worldHires','poland')
map('world','poland')
library(rworldmap)
data(countryExData)
countryExData
str(countryExData)
data(countryExData)
sPDF <- joinCountryData2Map( countryExData
,joinCode = "ISO3"
,nameJoinColumn = "ISO3V10")
mapDevice() #create world map shaped window
mapCountryData(sPDF
,nameColumnToPlot='BIODIVERSITY')
LETTERS["Y"]
sum(LETTERS== "Y")
which(LETTERS== "Y")
which(LETTERS== "E")
which(LETTERS== "S")
library("devtools")
install_github("bgmm","pbiecek")
library(bgmm)
load("c:/Users/Przemyslaw/Downloads/tr.RData")
load("c:/Users/Przemyslaw/Downloads/t.RData")
load("c:/Users/Przemyslaw/Downloads/l.RData")
load("c:/Users/Przemyslaw/Downloads/t.RData")
v
modelSemiSupervised = semisupervised( X = t, knowns = tr, class = l )
res = predict( modelSemiSupervised, t )
str(res)
a <- 1:4
(a[2] <- 3)
sample(2, 1:96, replacement=TRUE)
sample(2, 1:96, replace==TRUE)
sample(2, 1:96, replace=TRUE)
sample(2, 1:6, replace=TRUE)
?sample(2, 1:6, replace=TRUE)
sample(1:6, 2, replace=TRUE)
sample(1:6, 2, replace=TRUE)
sample(1:6, 2, replace=FALSE)
sample(1:6, 2, replace=FALSE)
sample(1:6, 2, replace=FALSE)
sample(1:6, 2, replace=FALSE)
sample(1:6, 2, replace=FALSE)
sample(1:6, 5, replace=FALSE)
sample(1:6, 5, replace=FALSE)
sample(1:6, 5, replace=FALSE)
sample(1:6, 5, replace=FALSE)
sample(1:6, 5, replace=TRUE)
set.seed(1313); sample(1:96, 2, replace=FALSE)
set.seed(1313); sample(1:96, 2, replace=FALSE)
set.seed(1313); sample(1:96, 2, replace=FALSE) - 11 - 12
set.seed(1313); sample(1:96, 2, replace=FALSE) - 11 - 12 - 10
set.seed(1313); sample(1:96, 2, replace=FALSE) - 11 - 12 - 10 - 9 - 7
set.seed(1313); sample(1:96, 2, replace=FALSE) - 11 - 12 - 10 - 9 - 7 - 29
set.seed(1313); sample(1:96, 4, replace=FALSE)
set.seed(1313); sample(1:96, 4, replace=FALSE)- 11 - 12 - 10
set.seed(1313); sample(1:96, 4, replace=FALSE)- 11 - 12 - 10 - 9
set.seed(1313); sample(1:96, 4, replace=FALSE)- 11 - 12 - 10 - 9 - 7
set.seed(1313); sample(1:96, 4, replace=FALSE)
par(mar=c(0,0,0,0))
plot(c(-2,2),c(-0.2,2),type="n",xlab="",ylab="",bty="n",xaxt="n",yaxt="n")
#arrows(-3,0,3,0,lwd=3,angle=15, length=0.5)
arrows(-1.5,-0.2,-1.5,2,lwd=3,angle=15, length=0.5)
curve(1-x^6,-1.2,1.2,add=T,lwd=3,col="grey90")
curve(1-x^4,-1.2,1.2,add=T,lwd=3,col="grey50")
curve(1-abs(x^3),-1.2,1.2,add=T,lwd=3,col="grey30")
curve(1-x^2,-1.2,1.2,add=T,lwd=3,col="grey20")
curve(1-abs(x),-1.2,1.2,add=T,lwd=3,col="grey10")
curve(cos(30*x)/20, -0.75, -0.3,add=T, lwd=3,col="red")
curve(cos(30*x)/20, 0.75, 0.3,add=T, lwd=3,col="red")
axis(2,line=-5.3,at=seq(0,1.6,0.02),labels=F,tcl=-0.3)
axis(2,line=-5.3,at=seq(0,1.6,0.1),labels=F,tcl=-0.5)
axis(2,line=-5.3,at=seq(0.2,1.6,0.2),labels=T,tcl=-0.8,las=2,cex.axis=0.8)
text(0.55,0.35,expression(y==1-abs(x)),srt=-60, col="grey10")
text(0.63,0.47,expression(y==1-x^2),srt=-67, col="grey20")
text(0.9,0.55,expression(y==1-x^6),srt=-80, col="grey50")
w1 = rbeta(30,2,2) -0.5
w2 = rbeta(30,2,2) -0.5
w1 = rnorm(40,0,0.2)
w2 = rnorm(40,0,0.2)
x = w1 - 0.1
y = w1/3+w2/2 + 0.4
points(x,y, pch=19, cex=0.7)
data.ellipse(x,y,add=T,plot.points=F,levels=c(0.4,0.85), center.cex=0)
par(mar=c(0,0,0,0))
plot(c(-2,2),c(-0.2,2),type="n",xlab="",ylab="",bty="n",xaxt="n",yaxt="n")
#arrows(-1.5,-0.2,-1.5,2,lwd=3,angle=15, length=0.5)
arrows(-1.5,0,-1.5,2,lwd=3,angle=15, length=0.5)
axis(2,line=-5.3,at=seq(0,1.6,0.02),labels=F,tcl=-0.3)
axis(2,line=-5.3,at=seq(0,1.6,0.1),labels=F,tcl=-0.5)
axis(2,line=-5.3,at=seq(0.2,1.6,0.2),labels=T,tcl=-0.8,las=2,cex.axis=0.8)
xx = seq(-1.2,1.2,0.01)
lines(xx + (1 - xx^2)/25 - 1/50, 1-xx^6      ,lwd=3,col="grey90")
lines(xx + (1 - xx^2)/25 - 1/50, 1-xx^4      ,lwd=3,col="grey50")
lines(xx + (1 - xx^2)/25 - 1/50, 1-abs(xx^3) ,lwd=3,col="grey30")
lines(xx + (1 - xx^2)/25 - 1/50, 1-xx^2      ,lwd=3,col="grey20")
lines(xx + (1 - xx^2)/25 - 1/50, 1-abs(xx)   ,lwd=3,col="grey10")
curve(cos(30*x)/20, -0.75, -0.3,add=T, lwd=3,col="red")
curve(cos(30*x)/20, 0.75, 0.3,add=T, lwd=3,col="red")
text(0.55,0.35,expression(y==1-abs(x)),srt=-60, col="grey10")
text(0.63 - 0.01,0.47,expression(y==1-x^2),srt=-67, col="grey20")
text(0.9  - 0.02, 0.55,expression(y==1-x^6),srt=-80, col="grey50")
xt = x-z/25
points(xt,y, pch=19, cex=0.7)
#data.ellipse(x,y,add=T,plot.points=F,levels=c(0.4,0.85), center.cex=0)
w1 = rbeta(30,2,2) -0.5
w2 = rbeta(30,2,2) -0.5
w1 = rnorm(40,0,0.2)
w2 = rnorm(40,0,0.2)
w3 = rnorm(40,0,0.2)
x = w1 - 0.1
y = w1/3+w2/2 + 0.4
z = w3/ (1 + x^2 + y^2)
x = w1 - 0.01
y = w2/2 + 0.4
z = 0.5 -w3/ (1 + w1^2 + w2^2)
par(mar=c(0,0,0,0))
plot(c(-2,2),c(-0.2,2),type="n",xlab="",ylab="",bty="n",xaxt="n",yaxt="n")
xx = seq(-1.2,1.2,0.01)
lines(xx - (1 - xx^2)/25 + 1/50, 1-xx^6      ,lwd=3,col="grey90")
lines(xx - (1 - xx^2)/25 + 1/50, 1-xx^4      ,lwd=3,col="grey50")
lines(xx - (1 - xx^2)/25 + 1/50, 1-abs(xx^3) ,lwd=3,col="grey30")
lines(xx - (1 - xx^2)/25 + 1/50, 1-xx^2      ,lwd=3,col="grey20")
lines(xx - (1 - xx^2)/25 + 1/50, 1-abs(xx)   ,lwd=3,col="grey10")
curve(cos(30*x)/20, -0.75, -0.3,add=T, lwd=3,col="red")
curve(cos(30*x)/20, 0.75, 0.3,add=T, lwd=3,col="red")
text(0.55,0.35,expression(y==1-abs(x)),srt=-60, col="grey10")
text(0.63 + 0.01,0.47,expression(y==1-x^2),srt=-67, col="grey20")
text(0.9  + 0.02, 0.55,expression(y==1-x^6),srt=-80, col="grey50")
xt = x+z/25
points(xt,y, pch=19, cex=0.7)
#data.ellipse(x,y,add=T,plot.points=F,levels=c(0.4,0.85), center.cex=0)
dev.off()
library(devtools)
install_github("PISA2012lite", "pbiecek")
library(PISA2012lite)
library("devtools")
install_github("PISA2012lite", "pbiecek")
1100*35
rpoiss(100)
rpois(100)
rpois(1,100)
rpois(1,100)
ppois(100,100)
ppois(100,150)
ppois(10,15)
cpois(100,150)
ppois(10,5)
install.packages("streamR")
install.packages("ROAuth")
library(ROAuth)
library(streamR)
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "http://api.twitter.com/oauth/access_token"
authURL <- "http://api.twitter.com/oauth/authorize"
consumerKey <- "lo3DCTVzId30ZPiADzQHQ"
consumerSecret <- "D9dufRy0Qaz9X2X6CbN7Bi3xe53SKgg2lBliGOtBNus"
my_oauth <- OAuthFactory$new(consumerKey=consumerKey,consumerSecret=consumerSecret, requestURL=requestURL,accessURL=accessURL, authURL=authURL)
my_oauth$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "http://api.twitter.com/oauth/access_token"
authURL <- "http://api.twitter.com/oauth/authorize"
consumerKey <- "lo3DCTVzId30ZPiADzQHQ"
consumerSecret <- "D9dufRy0Qaz9X2X6CbN7Bi3xe53SKgg2lBliGOtBNus"
my_oauth <- OAuthFactory$new(consumerKey=consumerKey,consumerSecret=consumerSecret, requestURL=requestURL,accessURL=accessURL, authURL=authURL)
my_oauth$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "http://api.twitter.com/oauth/access_token"
authURL <- "http://api.twitter.com/oauth/authorize"
consumerKey <- "lo3DCTVzId30ZPiADzQHQ"
consumerSecret <- "D9dufRy0Qaz9X2X6CbN7Bi3xe53SKgg2lBliGOtBNus"
my_oauth <- OAuthFactory$new(consumerKey=consumerKey,consumerSecret=consumerSecret, requestURL=requestURL,accessURL=accessURL, authURL=authURL)
my_oauth$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
system.file("CurlSSL", "cacert.pem", package = "RCurl")
consumerKey <- "438491318-nxqkSnwXFHux1FVF9FqsgeDZzdhoZcGc9yCYcDic"
consumerSecret <- "wNPSzzx7dv310Hbrxo5MCspxJpDNyzjOOUrRI02SaxM"
my_oauth <- OAuthFactory$new(consumerKey=consumerKey,consumerSecret=consumerSecret, requestURL=requestURL,accessURL=accessURL, authURL=authURL)
my_oauth$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
consumerKey <- "lo3DCTVzId30ZPiADzQHQ"
consumerSecret <- "D9dufRy0Qaz9X2X6CbN7Bi3xe53SKgg2lBliGOtBNus"
oauthKey <- "438491318-nxqkSnwXFHux1FVF9FqsgeDZzdhoZcGc9yCYcDic"
oauthSecret <- "wNPSzzx7dv310Hbrxo5MCspxJpDNyzjOOUrRI02SaxM"
my_oauth <- OAuthFactory$new(consumerKey=consumerKey,consumerSecret=consumerSecret,
oauthKey =oauthKey,
oauthSecret = oauthSecret,
requestURL=requestURL,accessURL=accessURL, authURL=authURL)
my_oauth$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
consumerKey <- "lo3DCTVzId30ZPiADzQHQ"
consumerSecret <- "D9dufRy0Qaz9X2X6CbN7Bi3xe53SKgg2lBliGOtBNus"
oauthKey <- "438491318-nxqkSnwXFHux1FVF9FqsgeDZzdhoZcGc9yCYcDic"
oauthSecret <- "wNPSzzx7dv310Hbrxo5MCspxJpDNyzjOOUrRI02SaxM"
my_oauth <- OAuthFactory$new(consumerKey=consumerKey,consumerSecret=consumerSecret,
oauthKey =oauthKey,
oauthSecret = oauthSecret,
requestURL=requestURL,accessURL=accessURL, authURL=authURL)
my_oauth$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
system( paste0( "curl http://curl.haxx.se/ca/cacert.pem -o " , tempdir() , "/cacert.pem" ) )
library(RCurl)
# Set SSL certs globally
options(RCurlOptions = list(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl")))
library(twitteR)
library(httr)
library(ROAuth)
library(streamR)
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
consumerKey <- "lo3DCTVzId30ZPiADzQHQ"
consumerSecret <- "D9dufRy0Qaz9X2X6CbN7Bi3xe53SKgg2lBliGOtBNus"
oauthKey <- "438491318-nxqkSnwXFHux1FVF9FqsgeDZzdhoZcGc9yCYcDic"
oauthSecret <- "wNPSzzx7dv310Hbrxo5MCspxJpDNyzjOOUrRI02SaxM"
my_oauth <- OAuthFactory$new(consumerKey=consumerKey,consumerSecret=consumerSecret,
oauthKey =oauthKey,
oauthSecret = oauthSecret,
requestURL=requestURL,accessURL=accessURL, authURL=authURL)
my_oauth$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
save(my_oauth, file="my_oauth.rda")
filterStream( file.name="sochi2014b.json", track="sochi2014", tweets=10, oauth=my_oauth )
?filterStream
filterStream( file="sochi2014.json", track="sochi2014", timeout=360, oauth=my_oauth  )
filterStream( file="sochi2014c.json", track="sochi2014", timeout=60, oauth=my_oauth , locations=c(-180,-90,180,90))
parseTweets(="sochi2014c.json", simplify = FALSE, verbose = TRUE)
parseTweets(="sochi2014c.json", simplify = FALSE, verbose = TRUE)
parseTweets("sochi2014c.json", simplify = FALSE, verbose = TRUE)
teee <- parseTweets("sochi2014c.json", simplify = FALSE, verbose = TRUE)
str(teee)
plot(teee$place_lat, teee$place_lon)
filterStream( file="sochi2014d.json", track="sochi2014", timeout=3600, oauth=my_oauth , locations=c(-180,-90,180,90))
teee <- parseTweets("sochi2014d.json", simplify = FALSE, verbose = TRUE)
dim(teee)
head(teee,2)
plot(teee$place_lat, teee$place_lon, pch='.')
save(teee, file="teee.rda")
taaa=1
gc()
library(RCurl)
# Set SSL certs globally
options(RCurlOptions = list(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl")))
library(twitteR)
library(httr)
library(ROAuth)
library(streamR)
requestURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
consumerKey <- "lo3DCTVzId30ZPiADzQHQ"
consumerSecret <- "D9dufRy0Qaz9X2X6CbN7Bi3xe53SKgg2lBliGOtBNus"
oauthKey <- "438491318-nxqkSnwXFHux1FVF9FqsgeDZzdhoZcGc9yCYcDic"
oauthSecret <- "wNPSzzx7dv310Hbrxo5MCspxJpDNyzjOOUrRI02SaxM"
my_oauth <- OAuthFactory$new(consumerKey = consumerKey, consumerSecret = consumerSecret,
oauthKey = oauthKey, oauthSecret = oauthSecret,
requestURL = requestURL, accessURL = accessURL, authURL = authURL)
my_oauth$handshake(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl"))
pre <- gsub(as.character(Sys.time()), pattern="[^0-9]", replacement="")
cat(pre,"\n")
repeat({
pre <- gsub(as.character(Sys.time()), pattern="[^0-9]", replacement="")
cat(pre,"\n")
#  filterStream( file=paste0("/Users/pbiecek/Desktop/_sochi2014_/sochi2014_",pre,".json"), track="sochi2014", timeout=60*60, oauth=my_oauth , locations=c(-180,-90,180,90))
filterStream( file=paste0("c:/_Przemek_/sochi2014_",pre,".json"), track="sochi2014", timeout=60*60, oauth=my_oauth , locations=c(-180,-90,180,90))
})
repeat({
pre <- gsub(as.character(Sys.time()), pattern="[^0-9]", replacement="")
cat(pre,"\n")
#  filterStream( file=paste0("/Users/pbiecek/Desktop/_sochi2014_/sochi2014_",pre,".json"), track="sochi2014", timeout=60*60, oauth=my_oauth , locations=c(-180,-90,180,90))
filterStream( file=paste0("c:/_Przemek_/sochi2014_",pre,".json"), track="sochi2014", timeout=60*60, oauth=my_oauth , locations=c(-180,-90,180,90))
})
repeat({
pre <- gsub(as.character(Sys.time()), pattern="[^0-9]", replacement="")
cat(pre,"\n")
#  filterStream( file=paste0("/Users/pbiecek/Desktop/_sochi2014_/sochi2014_",pre,".json"), track="sochi2014", timeout=60*60, oauth=my_oauth , locations=c(-180,-90,180,90))
filterStream( file=paste0("c:/_Przemek_/sochi2014_",pre,".json"), track="sochi2014", timeout=60*60, oauth=my_oauth , locations=c(-180,-90,180,90))
})
load("C:/_Przemek_/GitHub/PISA2012lite/data/student2012.rda")
load("C:/_Przemek_/GitHub/PISA2012lite/data/school2012dict.rda")
load("C:/_Przemek_/GitHub/PISA2012lite/data/student2012dict.rda")
student2012 <- student2012[student2012$CNT == "Poland",]
student2012dict[grep(student2012dict, pattern="book")]
table(student2012$ST28Q01, student2012$ST04Q01)
glm(ST04Q01~ST28Q01-1, data=student2012, weights=W_FSTUWT)
glm(as.numeric(ST04Q01)~ST28Q01-1, data=student2012, weights=W_FSTUWT)
summary(glm(as.numeric(ST04Q01)~ST28Q01-1, data=student2012, weights=W_FSTUWT))
table(student2012$ST04Q01)
summary(glm(as.numeric(ST04Q01)~ST28Q01, data=student2012, weights=W_FSTUWT))
unclass(by(student2012$W_FSTUWT, student2012$ST04Q01, sum))
summary(glm(as.numeric(ST04Q01)~1, data=student2012, weights=W_FSTUWT))
summary(glm(as.numeric(ST04Q01)~1, data=student2012, weights=W_FSTUWT/100))
summary(glm(as.numeric(ST04Q01)~1, data=student2012, weights=W_FSTUWT/1000))
summary(glm(as.numeric(ST04Q01)~1, data=student2012))
summary(glm(as.numeric(student2012$ST04Q01)~1, data=student2012))
table(as.numeric(student2012$ST04Q01))
unclass(by(student2012$W_FSTUWT, list(student2012$ST04Q01,
student2012$ST28Q01), sum))
library(rmeta)
dim(student2012)
install.packages("rmeta")
library(rmeta)
?metaplot
?meta
?meta,MH
?meta.MH
?forestplot
cochrane
data(cochrane)
cochrane
install.packages("sjPlot")
library(sjPlot)
sjp.glm(model,
gridBreaksAt=0.4)
model <- glm(as.numeric(ST04Q01)~ST28Q01, data=student2012, weights=W_FSTUWT)
sjp.glm(model,
gridBreaksAt=0.4)
model <- glm(as.numeric(ST04Q01)~ST28Q01-1, data=student2012, weights=W_FSTUWT)
sjp.glm(model,
gridBreaksAt=0.4) + theme_bw()
library(ggplot2)
sjp.glm(model,
gridBreaksAt=0.4) + theme_bw()
summary(model)
model <- glm(as.numeric(ST04Q01)~ST28Q01-1, data=student2012, weights=W_FSTUWT/100)
sjp.glm(model,
gridBreaksAt=0.4) + theme_bw()
sjp.glm(model,
type="bars",
gridBreaksAt=0.4) + theme_bw()
sjp.glm(model,
gridBreaksAt=0.4) + theme_bw()
model <- glm(as.numeric(ST04Q01)~ST28Q01-1, data=student2012, weights=W_FSTUWT/100)
summary(model)
unclass(by(student2012$W_FSTUWT, list(student2012$ST04Q01,
student2012$ST28Q01), sum))
tab <- unclass(by(student2012$W_FSTUWT, list(student2012$ST04Q01,
student2012$ST28Q01), sum))
t(tab)
tab[,1] / tab[,2]
tab <- unclass(by(student2012$W_FSTUWT, list(student2012$ST04Q01,
student2012$ST28Q01), sum))
tab[,1] / tab[,2]
tab[1,] / tab[2,]
summary(glm(as.numeric(ST04Q01)~ST28Q01, data=student2012, weights=W_FSTUWT, family="binomial"))
summary(glm(as.numeric(ST04Q01)-1~ST28Q01, data=student2012, weights=W_FSTUWT, family="binomial"))
summary(glm(as.numeric(ST04Q01)-1~ST28Q01, data=student2012, weights=W_FSTUWT, family="binomial"))
model <- glm(as.numeric(ST04Q01)~ST28Q01-1,
data=student2012,
weights=W_FSTUWT/100,
family="binomial")
model <- glm(as.numeric(ST04Q01)-1~ST28Q01-1,
data=student2012,
weights=W_FSTUWT/100,
family="binomial")
summary(model)
sjp.glm(model,
gridBreaksAt=0.4) + theme_bw()
?sjp.glm
sjp.glm(model,
gridBreaksAt=0.4,
showIntercept=TRUE) + theme_bw()
?sjp.glm
sjp.glm(model,
gridBreaksAt=0.4,
showIntercept=TRUE,
sortOdds=FALSE) + theme_bw()
?sjp.glm
tab
colnames(tab)
sjp.glm(model,
gridBreaksAt=0.4,
showIntercept=TRUE,
axisLabels.y = colnames(tab),
sortOdds=FALSE) + theme_bw()
?sjp.glm
setwd("c:/_Przemek_/GitHub/SmarterPoland_blog/2014/1kwiecien")
sjp.glm(model,
gridBreaksAt=0.4,
showIntercept=TRUE,
axisLabels.y = colnames(tab)[-1],
sortOdds=FALSE, axisTitle.x="Szansa urodzenia chłopca")
pdf("odds.pdf",10,10)
sjp.glm(model,
gridBreaksAt=0.4,
showIntercept=TRUE,
axisLabels.y = colnames(tab)[-1],
sortOdds=FALSE, axisTitle.x="Szansa urodzenia chłopca")
dev.off()
pdf("odds.pdf",8,7)
sjp.glm(model,
gridBreaksAt=0.4,
showIntercept=TRUE,
axisLabels.y = colnames(tab)[-1],
sortOdds=FALSE, axisTitle.x="Szansa urodzenia chłopca")
dev.off()
